version: "3.7"
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: 9nmuphtd7zqr4bxgcoUa3iejswyfk
    networks:
      db_net:
    # ports:
      # - 5432:5432
    volumes:
      - databasedata:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure        
  chainlink:
    image: quay.io/spivegin/chainlink:latest
    command: chainlink node start -p /root/password.txt -a /root/api.txt
    # image: smartcontract/chainlink:0.10.3
    # command: node n -p /root/password.txt -a /root/api.txt
    configs:
      - source: api
        target: /root/api.txt
        mode: 0444
      - source: password
        target: /root/password.txt
        mode: 0444
    depends_on:
      - db
    volumes:
      # - /root/.chainlink-rinkeby:/root/
      # - chainlinkdata:/root/.chainlink-rinkeby
      - chainlinkdata:/root/
      - /opt/acme:/opt/acme
    environment:
        ROOT: /chainlink
        LOG_LEVEL: debug
        ETH_CHAIN_ID: 4
        MIN_OUTGOING_CONFIRMATIONS: 2
        LINK_CONTRACT_ADDRESS: 0x01BE23585060835E02B77ef475b0Cc51aA1e0709
        GAS_UPDATER_ENABLED: "true"
        CHAINLINK_DEV: "true"
        CHAINLINK_PORT: 6688
        CHAINLINK_TLS_PORT: 0
        SECURE_COOKIES: "false"
        # CLIENT_NODE_URL: http://chainlink:6688
        CHAINLINK_TLS_REDIRECT: "false"
        ETH_URL: wss://mainnet.infura.io/ws/v3/b2715daf96274b619917c66ca018e2d2
        JSON_CONSOLE: "true"
        # TLS_CERT_PATH: /opt/acme/astrier.com/astrier.com/certificates/astrier.com.crt
        # TLS_KEY_PATH: /opt/acme/astrier.com/astrier.com/certificates/astrier.com.key
        ALLOW_ORIGINS: "*"
        DATABASE_URL: postgresql://postgres:9nmuphtd7zqr4bxgcoUa3iejswyfk@db:5432/postgres
        # CHAINLINK_PASSWORD: 3d7owgrWjbqch9nzkuaEH4fsvptmyi4
        # CHAINLINK_STORE_PASSWORD: tA70INcuPYiOoO6B9ztt
    networks:
      db_net:
    deploy:
      replicas: 1
      # restart_policy:
      #   condition: never
  caddy:
    image: quay.io/spivegin/caddy_only:caddy2
    # command: caddy -email ssltricll@txtsme.com -agree=true -log stdout
    command: caddy run -watch -config=/opt/caddy/Caddyfile
    configs:
    - source: caddyfile
      target: /opt/caddy/Caddyfile
      mode: 0444
    ports:
      - "80:80"
      - "443:443"
    networks:
      - net
      - db_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/acme:/opt/acme
    depends_on:
      - chainlink
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: any
      resources:
        reservations:
          cpus: '0.35'
          memory: 250M
volumes:
  databasedata:
  chainlinkdata:
networks:
  db_net:
    driver: overlay
    external: false
  net:
    driver: overlay
    external: true
configs:
  api:
    file: ./chainlink-rinkeby/.api
    external: false
  password:
    file: ./chainlink-rinkeby/.password
    external: false
  caddyfile:
    file: ./files/caddy/Caddyfile
    external: false